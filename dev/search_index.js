var documenterSearchIndex = {"docs":
[{"location":"api/#API-References","page":"API","title":"API References","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [Kitab]","category":"page"},{"location":"api/#Kitab.MetaData","page":"API","title":"Kitab.MetaData","text":"MetaData(author, ...)\n\nInstantiate MetaData object\n\n\n\n\n\n","category":"type"},{"location":"api/#Kitab.OpenITIDB","page":"API","title":"Kitab.OpenITIDB","text":"OpenITIDB(url::String)\n\nInstantiate OpenITIDB type using url as input.\n\n\n\n\n\n","category":"type"},{"location":"api/#Kitab.OpenITIDB-Tuple{Array{String}}","page":"API","title":"Kitab.OpenITIDB","text":"OpenITIDB(urls::Array{String})\n\nInstantiate OpenITIDB type using multiple urls as input.\n\n\n\n\n\n","category":"method"},{"location":"api/#Base.delete!-Tuple{Type{OpenITIDB}, Int64}","page":"API","title":"Base.delete!","text":"delete!(::Type{OpenITIDB}, row::Int64)\n\nDelete a particular book file using input row as identifier from list of books that can be viewed using list(OpenITIDB)\n\n\n\n\n\n","category":"method"},{"location":"api/#Base.delete!-Tuple{Type{OpenITIDB}}","page":"API","title":"Base.delete!","text":"delete!(::Type{OpenITIDB})\n\nDelete the DB folder used for saving the downloaded OpenITIDB text books\n\n\n\n\n\n","category":"method"},{"location":"api/#Base.get-Tuple{Type{OpenITIDB}, Array{String}}","page":"API","title":"Base.get","text":"get(::Type{OpenITIDB}, url::Array{String})\n\nDownload multiple OpenITI books using multiple urls through Array{String}.\n\n\n\n\n\n","category":"method"},{"location":"api/#Base.get-Tuple{Type{OpenITIDB}, String}","page":"API","title":"Base.get","text":"get(::Type{OpenITIDB}, url::String)\n\nDownload the OpenITI data.\n\n\n\n\n\n","category":"method"},{"location":"api/#Kitab.extract-Tuple{Type{MetaData}, Array{String}}","page":"API","title":"Kitab.extract","text":"extract(::Type{MetaData}, data::Array{String})\n\nExtract metadata from raw data text.\n\n\n\n\n\n","category":"method"},{"location":"api/#Kitab.list-Tuple{Type{OpenITIDB}}","page":"API","title":"Kitab.list","text":"list(::Type{OpenITIDB})\n\nList all the downloaded OpenITI text books\n\n\n\n\n\n","category":"method"},{"location":"api/#Kitab.load-Tuple{Type{OpenITIDB}, Int64}","page":"API","title":"Kitab.load","text":"load(::Type{OpenITIDB}, row::Int64)\n\nLoad the downloaded OpenITI data by specifying the row of the file in the output of list(OpenITIDB).\n\n\n\n\n\n","category":"method"},{"location":"data/#Data-Extraction","page":"Data Extraction","title":"Data Extraction","text":"","category":"section"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"In this section, we are going to illustrate how to use the APIs for downloading, loading and deleting the data.","category":"page"},{"location":"data/#Downloading-OpenITI-Data","page":"Data Extraction","title":"Downloading OpenITI Data","text":"","category":"section"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"The data is available in the repositories of OpenITI Github group, arranged according to Hijrah year of the books. Further, most of these books are also available in the catalog of books metadata of the KITAB project, which can be accessed via this link.","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"using Kitab\n\nmuslimsahih = \"https://raw.githubusercontent.com/OpenITI/0275AH/master/data/0261Muslim/0261Muslim.Sahih/0261Muslim.Sahih.Shamela0001727-ara1.mARkdown\";\nget(OpenITIDB, muslimsahih)","category":"page"},{"location":"data/#Downloading-Multiple-URLs","page":"Data Extraction","title":"Downloading Multiple URLs","text":"","category":"section"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"To download multiple URLs, use an array of it.","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"bukharisahih = \"https://raw.githubusercontent.com/OpenITI/0275AH/master/data/0256Bukhari/0256Bukhari.Sahih/0256Bukhari.Sahih.JK000110-ara1.completed\";\nbukhariducafa = \"https://raw.githubusercontent.com/OpenITI/0275AH/master/data/0256Bukhari/0256Bukhari.Ducafa/0256Bukhari.Ducafa.Shamela0008632-ara1.mARkdown\";\n\nget(OpenITIDB, [bukharisahih, bukhariducafa])","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"Once downloaded, re-downloading will not proceed if the file already exists.","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"get(OpenITIDB, [bukharisahih, bukhariducafa])","category":"page"},{"location":"data/#List-downloaded-OpenITI-Data","page":"Data Extraction","title":"List downloaded OpenITI Data","text":"","category":"section"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"To list the downloaded data, simply use the list function as follows:","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"list(OpenITIDB)","category":"page"},{"location":"data/#Load-OpenITI-Data","page":"Data Extraction","title":"Load OpenITI Data","text":"","category":"section"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"To load the data from the list of downloaded OpenITI data, we simply specify the row of the file from the list(OpenITIDB).","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"load(OpenITIDB, 1)\nload(OpenITIDB, 2)","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"Another approach is to use broadcasting as follows:","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"b1, b2 = load.(OpenITIDB, [2, 3]);\nb1\nb2","category":"page"},{"location":"data/#Delete-OpenITI-Local-DB-folder","page":"Data Extraction","title":"Delete OpenITI Local DB folder","text":"","category":"section"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"To delete a particular file from the list of text books as returned by the list(OpenITIDB), simply use the row number of the file from the said list to delete as follows:","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"list(OpenITIDB)\ndelete!(OpenITIDB, 1)\nlist(OpenITIDB)","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"To delete multiple files or text books, use broadcasting:","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"delete!(OpenITIDB, 1)\ndelete!(OpenITIDB, 2)\nlist(OpenITIDB)","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"Now to delete local DB folder, that is, deleting all files and folders containing the text books, simply run the following:","category":"page"},{"location":"data/","page":"Data Extraction","title":"Data Extraction","text":"delete!(OpenITIDB)","category":"page"},{"location":"#Welcome-to-Kitab.jl-Documentation","page":"Home","title":"Welcome to Kitab.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: codecov) (Image: MIT License)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Kitab.jl is an interface to the Open Islamic Texts Initiative (OpenITI) data. The OpenITI is a multi-institutional effort led by researchers at the Aga Khan University’s Institute for the Study of Muslim Civilisations in London, Roshan Institute for Persian Studies at the University of Maryland, College Park, and Universität Hamburg that aims to develop the digital infrastructure for the study of Islamicate cultures. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"At a high-level, Kitab.jl aims to fill the gap of doing Islamicate Digital Humanities in Julia. Currently, studying Qur'an using Julia is now accessible through QuranTree.jl, and analysis via Arabic Natural Language Processing (ANLP) is now provided by Yunir.jl. Therefore, relating pre-modern Islamicate texts to the Qur'an is now possible with Kitab.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Kitab.jl therefore provides APIs for downloading, listing, and loading the said OpenITI text data. Tools for analyzing the processed data by Kitab.jl are then provided by Yunir.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"We have to emphasize that, another user of the OpenITI texts is the KITAB (Knowledge, Information Technology, & the Arabic Book) project, which provides a digital tool-box and a forum for discussions about Arabic texts. KITAB project wish to empower users to explore Arabic texts in completely new ways and to expand the frontiers of knowledge about one of the world’s largest and most complex textual traditions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Kitab.jl is therefore somewhat similar to KITAB project, as both uses OpenITI as their main source for Arabic text books, and both aims to provide tools for analyzing the said texts. You might want to check out the interesting use-cases in KITAB project blog posts. Kitab.jl is independently developed but takes inspiration from KITAB project as well.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Lastly, kitab (کتاب) /kitāb/ is the Arabic word for \"book.\" The logo is a Kufic calligraphy of the Arabic word کتاب.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install the package, run the following:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg\njulia> Pkg.add(\"Kitab\")","category":"page"},{"location":"#Outline","page":"Home","title":"Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"metadata.md\",\n    \"data.md\",\n    \"api.md\"\n]\nDepth = 2","category":"page"},{"location":"metadata/#MetaData","page":"MetaData","title":"MetaData","text":"","category":"section"},{"location":"metadata/","page":"MetaData","title":"MetaData","text":"In this section, we are going to illustrate how to extract the metadata of the book.","category":"page"},{"location":"metadata/#Extraction-of-MetaData","page":"MetaData","title":"Extraction of MetaData","text":"","category":"section"},{"location":"metadata/","page":"MetaData","title":"MetaData","text":"To extract the metadata of the book, we use the API extract(MetaData, text). So that, the following will download the Muslim Sahih (shamela) book:","category":"page"},{"location":"metadata/","page":"MetaData","title":"MetaData","text":"using Kitab\n\nmuslimsahih = \"https://raw.githubusercontent.com/OpenITI/0275AH/master/data/0261Muslim/0261Muslim.Sahih/0261Muslim.Sahih.Shamela0001727-ara1.mARkdown\";\nget(OpenITIDB, muslimsahih)\nlist(OpenITIDB)\ntext = load(OpenITIDB, 1)\nextract(MetaData, text)","category":"page"}]
}
